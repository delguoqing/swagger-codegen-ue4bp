{{>licenseInfo}}
#pragma once

#include "Kismet/BlueprintFunctionLibrary.h"
#include "SwaggerBaseModel.h"
#include "{{unrealModuleName}}Responses.h"

{{#imports}}{{{import}}}
{{/imports}}
#include "{{classFilename}}Operations.generated.h"

{{#operations}}
{{#operation}}
/* {{summary}}
{{#notes}} *
 * {{notes}}{{/notes}}
*/
USTRUCT(BlueprintType, Category={{unrealModuleName}}, meta=(DisplayName="{{nickname}}Request", HasNativeBreak="{{unrealModuleName}}.{{operationIdCamelCase}}HelperLibrary.BreakRequest", HasNativeMake="{{unrealModuleName}}.{{operationIdCamelCase}}HelperLibrary.MakeRequest"))
struct {{dllapi}} F{{operationIdCamelCase}}Request : public FSwaggerBaseRequest
{
	GENERATED_BODY()
public:
    virtual ~F{{operationIdCamelCase}}Request() {}
	virtual void SetupHttpRequest(const TSharedRef<IHttpRequest,  ESPMode::ThreadSafe>& HttpRequest) const;
	virtual FString ComputePath() const;
    
	{{#allParams}}
	{{#isEnum}}
	{{#allowableValues}}
	enum class {{{enumName}}}
	{
		{{#enumVars}}
		{{name}},
		{{/enumVars}}
  	};
	{{/allowableValues}}
	{{#description}}/* {{{description}}} */
	{{/description}}{{^required}}TOptional<{{/required}}{{{datatypeWithEnum}}}{{^required}}>{{/required}} {{paramName}}{{#required}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/required}};
	{{/isEnum}}
	{{^isEnum}}
	{{#description}}/* {{{description}}} */
	{{/description}}UPROPERTY(BlueprintReadWrite, EditAnywhere{{#description}}, Meta=(ToolTip="{{{description}}}"){{/description}})
	{{^required}}TOptional<{{/required}}{{{dataType}}}{{^required}}>{{/required}} {{paramName}}{{#required}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/required}};
	{{/isEnum}}
    {{/allParams}}
};

UCLASS(NotBlueprintType)
class U{{operationIdCamelCase}}HelperLibrary : public UBlueprintFunctionLibrary
{
	GENERATED_BODY()
public:
	/**
	* Make {{nickname}} Request Struct
	{{#allParams}}{{#description}}* @param {{paramName}} - {{{description}}}
	{{/description}}{{/allParams}}*/
	UFUNCTION(BlueprintPure, Category = "{{unrealModuleName}}", meta = (BlueprintThreadSafe, DisplayName="Make {{nickname}} Request Struct"))
	static F{{operationIdCamelCase}}Request MakeRequest({{#allParams}}{{{dataType}}} {{paramName}}{{#hasMore}},{{/hasMore}}{{/allParams}});
	/**
	* Break {{nickname}} Request Struct
	{{#allParams}}{{#description}}* @param {{paramName}} - {{{description}}}
	{{/description}}{{/allParams}}*/	
	UFUNCTION(BlueprintPure, Category = "{{unrealModuleName}}", meta = (BlueprintThreadSafe, DisplayName="Break {{nickname}} Request Struct"))
	static void BreakRequest(const F{{operationIdCamelCase}}Request& InRequest{{#allParams}}, {{{dataType}}}& {{paramName}}{{/allParams}});
};
{{/operation}}
{{/operations}}